/*!
 * bsCustomFileInput v1.3.4 (https://github.com/Johann-S/bs-custom-file-input)
 * Copyright 2018 - 2020 Johann-S <johann.servoire@gmail.com>
 * Licensed under MIT (https://github.com/Johann-S/bs-custom-file-input/blob/master/LICENSE)
 */
!(function (e, t) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t() : typeof define === 'function' && define.amd ? define(t) : (e = e || self).bsCustomFileInput = t() }(this, function () { 'use strict'; const s = { CUSTOMFILE: '.custom-file input[type="file"]', CUSTOMFILELABEL: '.custom-file-label', FORM: 'form', INPUT: 'input' }; const l = function (e) { if (e.childNodes.length > 0) for (let t = [].slice.call(e.childNodes), n = 0; n < t.length; n++) { const l = t[n]; if (l.nodeType !== 3) return l } return e }; const u = function (e) { const t = e.bsCustomFileInput.defaultText; const n = e.parentNode.querySelector(s.CUSTOMFILELABEL); n && (l(n).textContent = t) }; const n = !!window.File; const r = function (e) { if (e.hasAttribute('multiple') && n) return [].slice.call(e.files).map(function (e) { return e.name }).join(', '); if (e.value.indexOf('fakepath') === -1) return e.value; const t = e.value.split('\\'); return t[t.length - 1] }; function d () { const e = this.parentNode.querySelector(s.CUSTOMFILELABEL); if (e) { const t = l(e); const n = r(this); n.length ? t.textContent = n : u(this) } } function v () { for (let e = [].slice.call(this.querySelectorAll(s.INPUT)).filter(function (e) { return !!e.bsCustomFileInput }), t = 0, n = e.length; t < n; t++)u(e[t]) } const p = 'bsCustomFileInput'; const m = 'reset'; const h = 'change'; return { init: function (e, t) { void 0 === e && (e = s.CUSTOMFILE), void 0 === t && (t = s.FORM); for (var n, l, r = [].slice.call(document.querySelectorAll(e)), i = [].slice.call(document.querySelectorAll(t)), o = 0, u = r.length; o < u; o++) { const c = r[o]; Object.defineProperty(c, p, { value: { defaultText: (n = void 0, n = '', (l = c.parentNode.querySelector(s.CUSTOMFILELABEL)) && (n = l.textContent), n) }, writable: !0 }), d.call(c), c.addEventListener(h, d) } for (let f = 0, a = i.length; f < a; f++)i[f].addEventListener(m, v), Object.defineProperty(i[f], p, { value: !0, writable: !0 }) }, destroy: function () { for (var e = [].slice.call(document.querySelectorAll(s.FORM)).filter(function (e) { return !!e.bsCustomFileInput }), t = [].slice.call(document.querySelectorAll(s.INPUT)).filter(function (e) { return !!e.bsCustomFileInput }), n = 0, l = t.length; n < l; n++) { const r = t[n]; u(r), r[p] = void 0, r.removeEventListener(h, d) } for (let i = 0, o = e.length; i < o; i++)e[i].removeEventListener(m, v), e[i][p] = void 0 } } }))
// # sourceMappingURL=bs-custom-file-input.min.js.map
